a).
#+BEGIN_SRC scheme
  (define (accumulate combiner null-value term a next b)
    (if (> a b)
        null-value
        (combiner (term a)
                  (accumulate combiner null-value term (next a) next b))))
;; 这是product过程
  (define (product term a next b)
    (accumulate * 1 term a next b))

;; 这是sum过程
  (define (sum term a next b)
    (accumulate + 0 term a next b))
#+END_SRC


b).
#+BEGIN_SRC scheme
(define (accumulate combiner null-value term a next b)
  (define (accumulate-iter a result)
    (if (> a b)
        result
        (accumulate-iter (next a) (combiner result (term a)))))
  (accumulate-iter (next a) (term a)))
#+END_SRC
